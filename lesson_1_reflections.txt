1) How did viewing a diff between two versions of a file help you spot the bug?

It helped because it saves a lot of time vs. comparing line by line manually. This allows for you to get to the lines that are different rather quickly. 

2) How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

This will help cut down on wasted time when trying to improve a program and then you break it by trying something new. It also allows for you to see how far the program has come since you started working on it.

3) What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros are you know what you are saving and why, so makes it easier to keep code tidy. The Cons are if you forget to save at a ‘good spot’ then your code will be a little harder to read or figure out re: changes. Autosave helps but probably doesn’t make logical sense if you were to lose a file and go back to the autosave file you might have been in the middle of a word and have to figure out what place it last saved. 

4) Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Git allows this because of the nature of how programs are built, each program usually is made up of various files that are inter-related where as google docs typically one file doesn’t interact with another. 

5) How can you use the commands git log and git diff to view the history of files?

The git log shows you all the changes that have happened to that repository or its history, the git diff command allows you to compare files and see the differences between them, which makes it easy to see what changed.

6) How might using version control make you more confident to make changes that could break something?

Version control allows for an easy way to go back and find bugs that were not meant to be and makes it easier to feel more confident in knowing you can fix issues that come up.

7) Now that you have your workspace set up, what do you want to try using Git for?

I want to try and build a repository with a basic website, possibly a blog or cms to see how it goes. I think this will really help me keep track of code. I’ve pulled my hair out for years trying to figure out what version of a website I have installed, etc.


